{"version":3,"sources":["src/enums.ts","src/classes/project.ts","src/classes/state.ts","src/classes/component.ts","src/decorators.ts","src/classes/projectItem.ts","src/classes/projectList.ts","src/validators.ts","src/helpers.ts","src/classes/projectTemplate.ts","src/index.ts"],"names":[],"mappings":";;;;;;AAAA,AUAA,IVAY,AUAZ,OAAA,GAAA,GVAA,IUAA,CAAA,iBAAA,CAAA;APAA,AFEA,AGFA,AIAO,ILAP,AFEA,AOFa,KJAG,EHEhB,EEFA,EKAwB,EJAxB,CAA0B,AIAC,CJA3B,EAAkC,EAAlC,EAA8C,EIAjC,QJAb,EAA4E,CIAjD,CAAsC,GAAtC,EAA4C;ALAvE,AFEA,AGDE,AJDF,AQA4E,AEC5E,CVDA,GUCA,ENAQ,GIDoE,ERAhE,MUCZ,EFD6E,CJCvD,AMAtB,EFD4E,CJCnD,CJDzB,AQAmF,ERA1D,CUCzB,CAAA,KNAmC,CAAC,KAAlC,YMAF,CAAA;APDA,AFEA,AGCE,AJH0B,AQC1B,ERD0B,IIGpB,KIFN,CLDF,AFEA,EODK,CRDuB,AQCtB,CRDsB,EQCvB,CJEgB,AIFnB,GJE0C,OJHhB,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AGK1B,AFFA,AGCE,AJJgC,AQC1B,AECV,EVFoC,CQAwC,CJIxE,AMFJ,OPGE,AFFA,IDHkC,CIIpB,AJJoB,ECGlC,AGCgB,CHDG,CEEnB,CAAa,AFFb,ASDF,CNC4C,CHAJ,CSDxC,GPGE,CFFA,CEE6B,AHLK,CCG0B,ADH1B,CUEpC,CAAA,OPGE,CHLkC,CGKsB,AFFxD,ADHkC,ECGsD,CDHtD,CAAA,CAAA,GCGlC,ADHkC,ECG6E,EEE/G,EAA+E,EFF/E,EAAoI,ADHlG,AUEpC,CAAA,EPGE,EAA+F;AAAvC,AFFrC,AGEjB,AJL0C,AQCpC,CRDV,AQAO,ERAK,CIKR,GAAG,EDAmD,AFFrC,AGEd,EHFc,GAAA,EAAA,ADHI,GAAb,EGK8C,GAAA,ACAnD,EJLK,CAAA,SGK8C,IHL9C,KAAA,OAAA,CAAA,aAAA,GAAa,EAAb,CAAZ;AGMI,AFHoC,AGGlC,AMFN,IAAM,KPEG,AFH+B,CGG5B,IHH4B,ESCtB,CTDsB,AGGrB,EMFE,CNEC,CDAlB,CFHoC,EEGhB,EOFH,CAAA,KPEW,CAAC,CCAG,CAAC,IAAf,AMFD,CNEqB,AMFR,INEZ,CAAhB,EDAkB,CAAwB,GOF3B,EAArB,CPEwB,CAApB;AACA,AFJ0D,AGIzD,AIPQ,AEMb,IAAM,GFNO,CAAA,CLOJ,AFJqD,GSGhD,CNCF,EMDK,EPCb,EKPS,AEMQ,CPCD,AFJ0C,AGIzD,EIPmB,CPGsC,KEIlC,CAAC,IKPhB,CPGiD,ESGzC,CAAA,MPCD,CAAwB,QOD3B,EPCG,AODpB,CPCI;AACA,AFLsF,AGKrF,AMDL,IAAM,IPCI,CFLgF,MAAA,CEKxE,EFLwE,CEKrE,EODE,GTJmE,ASIhE,GPCG,CAAC,AODA,UPCT,CAAoB,EODX,CAAA,EPCgB,SODpB,CAAgB,EPCD,CAAkB,KODjC,CAA1B,CPCqB,EAA+C,IAA/C,CAAjB;AACA,AFN6G,AGArE,AMK5C,GNLE,CMKI,KPCG,AFNwG,MAAA,GAAA,KSKxF,CTLwF,CEM7G,CODwB,EPCA,EODI,MPCI,CAAC,MODL,CAAA,UPC5B,CODwB,CAAgB,UAAhB,CAA5B;ATL2I,AGQzI,AMFF,OAAO,CAAC,CNEC,EMFT,CAAY,UNEV;ADAE,ACCH,AMHY,EAAA,MPEN,EOFc,EAAA,GPEjB,EAAY,GOFJ;APGN,AFRN,ASKuB,EAAA,OTLvB,EEQW,KFRX,GSKwC,EAAA,MPGlC,CAAsB,EAAtB,GAA2B,KOHrB,EPGN;AACD,AFXL,AGFA,AMS0C,CTP1C,CSO0C,CTP1C,IGFA,CAAA,QAAA,GAAA,EMS6D,EAAA,INT7D,eMSY;AAAmD,AHN/D,EGM+D,EHNzD,UGMqE,EAAA,EHNvD,GAAc;AJY9B,AFbS,ASOD,AHLV,CGKF,CHLE,KNFW,CAAA,CEaJ,CIXC,EAAE,GJWR,AFbS,CEaG,EFbH,OAAA,GEaT,IIXQ;AJaT,AIbe,WAAA,wBAAA;AAAwB,GADR;AJgBxB,AIdR,EJcQ,AIdR,IAAI,EAAG,GJcC,CAAA,SAAA,CAAA,AIdA,GAAD,EAAI,CJcH,GAAR,UAAe,QAAf,EAAgC;AAC9B,AIfc,SJeT,EIfS,MJed,CAAc,qBAAd,CAAoC,EIfO,GAA7B,GJe8B,AIfE,GJeC,UIfjC,EJe8B,GAAkB,WAA9D,EAA2E,KAAK,gBAAhF;AACD,AIhB4D,GJcrD,AIhBwB;AAGhC,EAAA,IAAI,EAAG,cAAC,GAAD,EAAI;AJqBb,AIrBkB,SJqBlB,EIrBkB,OJqBlB,wBIrB+C,GAA7B,GAAgC,aAAhC;AJNlB,AIM+D,CJN/D,EAAA,AIGkC;AAIhC,EAAA,GAAG,EAAG,aAAC,GAAD,EAAI;AJPU,AIOL,OJPK,CAAA,GIOL,MJPK,GAAA,SAAA,aIOwB,GAA7B,GAAgC,QAAhC;AAAwC,GAJvB;ADHlC,AJCA,AKOE,EAAA,EDRF,AJCA,CKOK,EAAG,IDRR,AJCA,GIDA,AJCA,MKOS,CDRT,AJCA,CIDA,AJCA,CKOQ,EAAI,ODRZ,AJCA,CIDA,AJCA;AKOiB,WAAA,+BAA6B,GAA7B,GAAgC,QAAhC;ADPjB,AJCA,AKMyD,IDPzD,AJCA,SAAA,EIDA,CJCA,EIDA,KJCA,CAAA,CIDA,CAAA,SJCA,CAAA,GIDA,CAAA;ACEkC,CAAlC;ADAA,AJEA,IIFA,AJEA,KAAA,EIFA,GAAA,OAAA,CAAA,SAAA,CAAA;AJEA,AKQA,SAAgB,QAAhB,CAAyB,KAAzB,EAA+C;ADT/C,AJCA,AKSE,IDVF,ECUM,MLTN,AKSY,GAAa,EDVzB,ACUE,GDVF,OAAA,CAAA,eAAA,CAAA;AJCA,WAAA,KAAA,GAAA;AICA,AJAY,AKUV,IDVI,ECUD,GLVO,EKUF,CAAC,IDVO,EJAN,CIAS,CCUnB,CLVqC,CKUlB,CLVT,GIAS,CAAA,YAAA,CAAa,WAAb,EAArB;AJMC,AKKG,QAAG,KAAK,CAAC,KAAN,CAAY,QAAZ,GAAuB,IAAvB,GAA8B,MAA9B,KAAyC,CAA5C,EAA+C;ADTnD,ACUM,IDVN,ECUM,MAAM,GDVZ,ACUY,cAAA,CAAO,MAAP,EAAa,CAAE,cAAc,CAAC,QAAf,EAAF,CAAb,CAAN;ADVN,AJAE,AKWG,ELXH,KAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,UAAZ,EAAmC;AGRrC,ACQA,AGRA,APSI,AKYD,IFrBH,AIAA,KPSS,CIDT,MDRA,ACQA,AGRA,EHQA,AJCI,CGTJ,AIAA,APSmB,IAAf,CAAoB,EGTxB,AIAA,CJAA,AIAA,OPSI,QGTJ,AIAA,CJAA,AIAA;AHQiC,AJE9B,EIF8B,CJA/B,QIA+B,CAAA,WAAA,EAAA,MAAA,CAAA;ADNjC,AIDA,AFsBE,IFrBF,AIDA,EFsBK,KAAK,CAAC,GFrBX,CIDA,AFsBK,EFrBL,CIDA,CFsBmB,IAAd,CFrBL,CAAA,AIDA,CAAA,CFsB2B,OAAO,IFrBlC,CAAA,AEqBuC,CAAC,CEtBxC,CAAA,GFsB2B,KAAuB,QAAhD,EAA0D;ADX1D,AJAF,AKYI,QAAG,CLZP,EIAE,ECYU,CLZZ,AKYa,KAAN,CAAY,EDZjB,CAAoB,GCYf,CDZL,EAA8C,ACYpB,KAAK,CAAC,IAA9B,EAAoC;AFnBxC,ACOE,AGTF,APEA,AKoBM,CLpBN,EAAA,CGAA,AIFA,EFsBM,EDbJ,ICaU,CDbV,AGTF,EJEA,AEoBY,CDXR,AGXJ,MHWI,CAAA,AGXJ,CAAA,GHWI,CAAA,CCWQ,CAAO,EDXf,EAAM,EGXV,AFsBY,CEtBZ,CFsByB,CAAE,SDXvB,EAAsB,GCWe,CAAC,CDXtC,EAA4B,CCWL,CAAoB,GDX3C,EAAsC,ACWU,CAAC,GDXP,CCWnB,CAAF,CDXqB,ACWlC,CAAN,UDXF,KAAsD,IAFxD;ADPF,AEqBK;AFrBL,ACOsB,AGPtB,APSA,AKcG,IDhBmB,AGPtB,APSA,KIFsB,CDPtB,ACOsB,CGPtB,GHOsB,AGPtB,EJAA,AHSA,CIFsB,CDPtB,GCOsB,AGPtB,CAAA,SAAA,CAAA;AJAiC,ACW7B,AJFJ,EGTiC,ECW7B,KAAI,CAAC,CDXwB,CAAA,WAAA,EAAA,CCW7B,GAAwB,EDXK,ACW7B,CDX6B;AICjC,APQA,AKgBE,IExBF,EFwBK,ILhBL,CKgBU,CAAC,GExBX,CPQA,AKgBK,EExBL,APQA,EKgBmB,IAAd,CExBL,CAAA,EFwB2B,OAAO,IExBlC,CAAA,AFwBuC,CAAC,KAAb,KAAuB,QAAhD,EAA0D;AFjB1D,ACKE,AJJ+B,AKiB/B,ELjB+B,EII/B,ICaG,CDbC,CAAC,CDLP,AHCiC,CAAA,CKiBvB,CAAC,KDbT,ACaG,CDbY,ACaA,EFlBjB,CAAY,CCKV,AJJ+B,EAAA,AKiB5B,GFlBL,AEkB0B,EFlBE,CHCK,CAAA,CKiBF,CAAC,GFlBhC,CEkBE,CFlB0C,CEkBN;AFlBtC,AILF,AFwBM,IExBA,EFwBA,EFnBJ,IEmBU,CFnBV,EEmBU,CFlBR,AINc,GAAG,GJMjB,CAAA,GINiB,CJMjB,AINiB,CJMjB,CEkBQ,CAAO,EFlBf,EAAM,EEkBE,EAAa,CExBJ,AFwBM,CExBO,UJM9B,CINiB,CJMO,CIN5B,AFwByC,CAAC,IFlBtC,AEkBuB,CAAoB,CFlBX,IEkBgB,CFlBhD,AEkBiD,EFlBV,EEkBhB,CAAF,CAAb,CAAN,EFlB4C,CAAC,EAA/C,KAAkD,IADpD;ACOE,AJFF,AKeG,IDbD,KAAI,CAAC,CJFP,YIEE,AJFF,GAAA;AGHE,AIJJ,APOE,AKgBC,IFnBC,AIJJ,IPOE,CGHM,CAAC,GHGP,GACE,CGJA,EIJJ,CJImB,EHIf,CAAA,IGJA,AHIA,CAAA,IAAA,KAAO,IADT;AOPF;AJMI,ACID,AGVH,APIU,AKqBR,IFnBE,AHFM,EKqBL,GFnBG,AHFE,CGED,AINT,APIU,CKqBA,CAAC,GAAN,CEzBL,EAAA,APIU,CGEN,AEmBc,ELrBc,EAAtB,AKqBL,IAAqB,OAAO,KAAK,CAAC,KAAb,KAAuB,QAA/C,EAAyD;AEzBtB,AF0BjC,EE1BiC,MF0B9B,GE1B8B,CAAA,CF0BzB,CAAC,KAAN,GAAc,KE1BgB,AF0BX,CAAC,CE1BU,EF0BjC,EAA4B,EE1BK,CAAA;AJOjC,ACKM,AJHP,AKkBG,EDfI,EDLN,EEoBE,GFpBE,CAAC,EEoBG,CDfF,CAAA,CCeE,QFpBR,ACKM,CAAA,KCeE,CAAO,MAAP,EDfF,ACee,CAAE,EDfzB,YAAA,ACeuC,CAAC,GAAf,CAAmB,KAAK,CAAC,GAAzB,CAAF,CAAb,CAAN;ADdF,AGPF,AFsBG,QDfK,GGPR,GHOc,GAAG,QAAQ,CAAC,AGP1B,GAAA,WHOiB,CAA2B,KAAK,IAAL,GAAS,eAApC,CAAf;AACA,AGRF,APKO,AKkBN,ELlBM,EIGL,IGRF,EHQQ,CAAC,EGRT,CPKO,CAAA,COHL,IHMA,EGNA,CHMmB,AGNnB,EHMA,CJHK,COHL,CAAA,CPGF,GOHE,EAAM,OPGR,WOHE,EAA0B,KAA1B,EAAiC,IAAjC,KAAsC,IAFxC;AJEC,ACOC,AJHA,IIGA,IJHG,GIGI,CAAC,CJHA,EIGR,CAAY,IAAZ,CJHA,EAAkB;AOFlB,APGE,AKkBJ,IErBE,EFqBC,GErBG,CAAC,CFqBC,CAAC,CLlBE,EKkBR,GErBD,APGc,CKkBA,EErBE,EFqBf,GErBmB,APGlB,COHmB,AFqBC,OAAO,KAAK,CAAC,GErBnB,CAAsB,CFqBhB,KAAuB,OErB7B,CAAoC,AFqBtD,EAAyD,aErBvC,CAAhB;AJZF,ACkBE,AGJA,APEC,AKkBD,EFlCF,EIcE,IJdF,AEkCK,CFlCL,ACkBoB,AGJd,CAAC,GHIa,ACgBV,CAAC,CDhBS,GAAA,CAAA,ACgBf,EDhBe,CCgBD,CFlCnB,ACkBoB,CDlBhB,ECkBgB,CGJlB,AFoBsB,CAAC,EEpBE,CHIF,ACgBvB,EAA4B,EFlC1B,AIc2B,CJd3B,AIc4B,SJdhC,EAAI,ACkBF,EAAkB,EAAA,CGJO,CAAsB,CHI7B,EDlBpB,ACkBoB,CAAA,CDlBT,KCkBT,EAAkB,CGJO,CHIP,AGJ2C,EHI7D,EAAyC,IGJhB,CAAzB;AHII,AGHJ,AFoBE,IEpBF,EFoBE,GFnCJ,AIeM,CHGM,AGHL,EFoBG,EDjBM,CCiBN,EDjBM,EAAA,CAAA,EAAA,CAAV,CDlBN,KEmCU,CAAO,GEpBf,GAA+B,AFoBvB,EAAa,CAAE,EEpBY,CAAC,WFoBC,CAAC,GAAf,CEpBQ,AFoBW,CEpBW,IFoBN,CAAC,GAAzB,CAAF,CAAb,CAAN,EEpB6B,CAAoC,cAApC,CAA/B;AJdA,ACkBE,AGHF,APEA,AKkBC,IEpBD,KAAI,APEC,CICC,AGHD,GJfE,IHiBP,CGjBY,EHiBI,GICV,CAAA,AJDc,CGjBb,CAAa,EIepB,GAA0B,CJfnB,GCkBL,CAAgB,AGHY,APEd,CGjBe,AIeA,CJfxB,AHiBP,GGjBmC,ACkBZ,UDlBhB,EIemB,CJfyB,AIeH,GHG9B,CAAsB,CDlBgB,OAAL,CAAa,AIetC,CAAoC,GHG5C,CAAoC,CDlBH,GAAmB,ACkBpD,CGHQ,CHGmC,AGH7D,EHGE,EAA+D,IDlBjE,ACkBE;ADjBH,ACkBE,AJDD,AKkBD,KFrCU,MHmBF,KAAK,QAAZ;AIED,AGHC,APED,GINO,AJDD,COKL,KAAI,CAAC,SAAL,EJlBS;AEuCX,SAAO,MAAP;AFvCW,ACuBX,AJCA,AKgBD,EDjBC,AJCA,CGxBA,UCuBA,CAAA,AJCA,CAAA,QIDA,CAAA,AJCA,CAAA,QIDA,EJCA,CIDA,EJCA,QIDU,EJCC,MIDX,CJCA,CIDyC,CJCf;AID1B,AGJC,APMC,QIFF,AJEQ,KIFR,GAAA,EJEkB,EIFlB,CJEqB,IAAI,SAAA,CAAA,OAAJ,CAAY,IAAI,CAAC,MAAL,GAAc,QAAd,EAAZ,EAAsC,OAAO,CAAC,KAA9C,EAAqD,OAAO,CAAC,WAA7D,EAA0E,OAAO,CAAC,MAAlF,EAA0F,OAAA,CAAA,aAAA,CAAc,MAAxG,CAAnB;AGZF,AHcE,AKvBJ,EFSE,KETF,CAAA,CLuBS,IGdP,CAAA,EETF,CLuBI,CAAc,CKvBlB,GLuBI,CGdF,AHcqB,CGdrB,GETF,MLuBI,OGdF,GAAA,UAAiB,KAAjB,EAAiC;AAC/B,ACUA,AGDM,EAAA,EJTN,ACUA,ODVO,CAAC,GAAR,CAAY,ACUA,CAAC,AGDP,CAAA,SAAA,CJTN,ACUA,AGDM,CHCmB,CDVE,KAA3B,ICU0B,CGDpB,GAAR,IHC2B,EAAoB,MGD/C;AJRC,ACUG,AGDF,APKA,GGhBF,KIWQ,CPKkB,CIJhB,GJIgB,EAAA,COLV,EPKU,COLP,APKO,EAAA,EAAA,COLF,EHCE,AJIA,GIJG,EJIE,MIJM,CAAC,EJIpC,COLiB,CAAuB,APKhB,EIJG,AJIH,CIJmB,EGD3C,APKwB,EAAA,CAAA,KIJmB,CJI3C,EAAwB,CIJmB,CJInB,CIJuB,CJI/C,EAAwC;AIJW,AGAnD,APII,QOJE,EPII,KIJyC,AGAtC,GAAG,EPII,GIJuC,AGAtC,APID,EAAA,CAAA,EIJ4C,AJI5C,CAAhB,OIJ+C,GAAyB,IAAI,CAAC,EGAjE,CAA6B,GHA+B,EGA5E,GHA4F,OAAA,CAAA,aAAA,CAAc,MAAvD,GAAgE,IAAI,CAAC,MAAL,KAAgB,OAAA,CAAA,aAAA,CAAc,QAA9F;ADRrD,ACQ2J,AGCzJ,APIE,EGbJ,IHaI,CILyB,CAAzB,AGCI,KJTR,CAAA,EHac,COJG,APIF,GOJK,CAAC,CPID,CGbpB,CAAA,EIS0B,IPIX,CAAc,KAAd,EGbf,AHac,CAAV,EGbJ,GISqB,CAAwB,KAA3C,CJTa,KAAf,EAA+B;AAC7B,ACQE,AGEF,APGC,IGbD,ECQE,EGEI,GJVC,ACQD,CDRE,ACQD,GDRP,CAAY,QIUU,EJVtB,CIU0C,CJVjB,ACQvB,GAAwB,EDR1B,cCQE;ADNH,AISG,APGH,GGfD,AHOA,GOKI,KAAK,EAAE,QADiC;AHDxC,AGGA,MHHA,AGGA,KHHI,CAAC,EGGG,EAAE,UHHV;ADHJ,ACIG,AGAyC,APM9C,EGVE,GCAE,AGIA,IPMJ,IGVE,CAAA,OHUF,EGVE,CAAA,SAAA,GAAA,YAAA;AACE,ACID,AGIC,AP5BJ,CAAA,CAAmC,CIkBjC,IJlBF,CO4BU,AP5BV,CGoBS,QAAL,CAAc,KIQO,GAAoB,QJRzC,CAA+B,WAA/B,EAA4C,KAAK,gBAAjD;AACA,AIQE,MAAA,GJRG,EIQE,EAAE,IJRT,CAAc,EIO2B,cJPzC,CAA+B,SAA/B,EAA0C,KAAK,cAA/C;AACD,ACID,AGII,AP9BO,EI0BX,CDPA,GIWI,CP9BO,CAAA,KI0BX,CAAA,AGIY,EAAE,IAF6B,AP5BhC,GI0BX,AJ1BW,CI0BX,WJ1BW,EI0BX,GAAA,YAAA;AACE,AGIE,MAAA,EHJI,EGIA,EAAE,EHJI,GAAM,KAAK,IAAL,GAAS,eAA3B;ADHF,ACIE,AGAyC,EJJ3C,GIIE,IHAK,IDJP,CAAA,SAAA,CAAA,CCIE,CAAsB,WDJxB,ECIE,CDJF,ACIsC,IAApC,EAA2C,EAA3C,GAAgD,CDJlD,KCIE;ADHA,ACIA,AGKA,QAAM,CJTD,ACIA,QDJL,CAAc,OCId,AGKuB,CHLD,EGKqB,GJT3C,CAA4B,IAA5B,EAAmC,CCInC,CAAoC,IAApC,EAA2C,GDJ3C,GAAiD,KAAK,ACItD,GAAyD,IDJR,CAAa,ACIA,IAAL,CDJzD,ACImE,WAAV,KAA0B,WAAnF;ADHA,ACID,AGKG,GHTJ,GGSI,GJTG,EISE,EAAE,IJTT,CAAc,IIQ6B,SJR3C,CAA4B,IAA5B,EAAmC,WAAnC,GAAiD,KAAK,OAAL,GAAe,WAAhE;AACA,AISE,MAAA,GJTG,KISK,EAAE,CJTZ,CAAc,EIO6B,WJP3C,CAA4B,GAA5B,EAAkC,W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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export enum ProjectStatus { Active, Finished }\r\n","import { ProjectStatus } from \"../enums\";\r\n\r\nexport class Project {\r\n  constructor(public id: string, public title: string, public description: string, public people: number, public status: ProjectStatus ) {}\r\n}\r\n","import { Inputs } from \"../interfaces\";\r\nimport { ProjectStatus } from \"../enums\";\r\nimport { Project } from \"./project\";\r\nimport { Listener } from \"../types\";\r\n\r\nclass State <T> {\r\n  protected listeners: Listener<T>[] = [];\r\n\r\n  addListener(listenerFn: Listener<T>) {\r\n    this.listeners.push(listenerFn)\r\n  }\r\n\r\n}\r\n\r\nexport class ProjectState  extends State<Project> {\r\n  private projects: Project[] = [];\r\n  private static instance: ProjectState;\r\n\r\n  private constructor() {\r\n    super()\r\n  }\r\n\r\n  static getInstance() {\r\n    if(this.instance) {\r\n      return this.instance;\r\n    }\r\n\r\n    this.instance = new ProjectState();\r\n    return this.instance\r\n  }\r\n\r\n  \r\n\r\n  addProject(project: Inputs) {\r\n    const newProject = new Project(Math.random().toString(), project.title, project.description, project.people, ProjectStatus.Active)\r\n\r\n    this.projects.push(newProject)\r\n\r\n    for(const listenerFn of this.listeners) {\r\n      listenerFn(this.projects.slice());\r\n    }\r\n  }\r\n\r\n}","export abstract class Component <T extends HTMLElement, U extends HTMLElement> {\r\n  templateElem: HTMLTemplateElement;\r\n  hostElem: T;\r\n  appContainerElem: U;\r\n\r\n  constructor (tempId: string, hostElemId: string, public insetAtStart: boolean, newElId?: string ) {\r\n    this.templateElem = document.getElementById(tempId)! as HTMLTemplateElement;\r\n    this.hostElem = document.getElementById(hostElemId)! as T;\r\n    const tempNode = document.importNode(this.templateElem.content, true);\r\n    this.appContainerElem = tempNode.firstElementChild as U;\r\n\r\n    if(newElId) {\r\n      this.appContainerElem.id = newElId;\r\n    }\r\n\r\n    this.attach(insetAtStart);\r\n\r\n  }\r\n\r\n  private attach(position: boolean) {\r\n    this.hostElem.insertAdjacentElement(position ? 'afterbegin' : 'beforeend', this.appContainerElem);\r\n  }\r\n\r\n  abstract configure(projType: 'active' | 'finished'): void;\r\n  \r\n  abstract renderContent?(): void;\r\n   \r\n}","export function AutoBind (_: any, _2: string, descriptor: PropertyDescriptor) {\r\n  const originalMethod = descriptor.value;\r\n  \r\n  const adjDescriptor: PropertyDescriptor = {\r\n    configurable: true,\r\n    get() {\r\n      const boundFn = originalMethod.bind(this);\r\n     return boundFn\r\n    }\r\n  }\r\n\r\n  return adjDescriptor\r\n}\r\n\r\n","import { AutoBind } from \"../decorators\";\r\nimport { Draggable } from \"../interfaces\";\r\nimport { Component } from \"./component\";\r\nimport { Project } from \"./project\";\r\n\r\nexport class ProjectItem extends Component<HTMLUListElement, HTMLLIElement> implements Draggable {\r\n  private project: Project;\r\n\r\n\r\n  get persons() {\r\n    return this.project.people === 1 ? '1 person' : `${this.project.people} persons`\r\n  }\r\n\r\n  constructor(hostId: string, project: Project) {\r\n    super('single-project', hostId, false, project.id);\r\n    this.project = project;\r\n\r\n    this.configure();\r\n    this.renderContent()\r\n  }\r\n\r\n  \r\n  dragStartHandler(event: DragEvent) {\r\n    console.log('drag start',  event)\r\n  }\r\n\r\n  dragEndHandler(event: DragEvent) {\r\n    console.log('drag end',  event)\r\n\r\n  }\r\n  \r\n\r\n  @AutoBind\r\n  configure(){\r\n    this.hostElem.addEventListener('dragstart', this.dragStartHandler)\r\n    this.hostElem.addEventListener('dragend', this.dragEndHandler)\r\n  }\r\n\r\n  renderContent() {\r\n    this.hostElem.querySelector('h2')!.textContent = this.project.title;\r\n    this.hostElem.querySelector('h3')!.textContent = this.persons + ' assigned';\r\n    this.hostElem.querySelector('p')!.textContent = this.project.description;\r\n  }\r\n\r\n}","import { ProjectStatus } from \"../enums\";\r\nimport { Component } from \"./component\";\r\nimport { Project } from \"./project\";\r\nimport { ProjectState } from \"./state\";\r\nimport { ProjectItem } from './projectItem'\r\n\r\nconst projectState = ProjectState.getInstance()\r\n\r\nexport class ProjectList extends Component<HTMLDivElement, HTMLElement> {\r\n  \r\n  assignedProjects: Project[];\r\n\r\n  constructor(private type: 'active'| 'finished' ) {\r\n  \r\n    super('project-list', 'app',false, `${type}-projects`);\r\n\r\n    this.assignedProjects = [];\r\n  \r\n    this.configure(type);\r\n\r\n    this.renderContent()\r\n  }\r\n\r\n  private renderProjects() {\r\n    const listEl = document.getElementById(`${this.type}-project-list`)! as HTMLUListElement;\r\n    listEl.innerHTML = '';\r\n    console.log(this)\r\n    for(const item of this.assignedProjects) {\r\n      new ProjectItem(this.appContainerElem.querySelector('ul')!.id, item)\r\n    }\r\n  }\r\n\r\n  configure(projType: 'active' | 'finished') {\r\n    projectState.addListener((projects: Project[]) => {\r\n      const relevantProjects = projects.filter(proj => projType === 'active'  ? proj.status === ProjectStatus.Active : proj.status === ProjectStatus.Finished );\r\n      this.assignedProjects = relevantProjects\r\n      this.renderProjects();\r\n    })\r\n  }\r\n\r\n  renderContent() {\r\n    const listId = `${this.type}-project-list`;\r\n    this.appContainerElem.querySelector('ul')!.id = listId;\r\n    this.appContainerElem.querySelector('h2')!.textContent = this.type.toUpperCase() + ' Projects';\r\n  }\r\n\r\n}","import { ValidatorConfig, ErrorMsgs } from './interfaces';\r\n\r\n\r\nconst ErrorMessagegs: ErrorMsgs = {\r\n  required: () => 'This field is required',\r\n  minL:  (val) => `Field requires minimum of ${val} characters`,\r\n  maxL:  (val) => `Field requires maximum of ${val} characters`,\r\n  min:  (val) => `Field requires minimum of ${val} value`,\r\n  max:  (val) => `Field requires maximum of ${val} value`,\r\n\r\n}\r\n\r\n\r\nexport function validate(input: ValidatorConfig) {\r\n  let errors: string[] = [];\r\n\r\n  if(input.required) {\r\n    if(input.value.toString().trim().length === 0) {\r\n      errors = [...errors, ErrorMessagegs.required()];\r\n    }\r\n    \r\n  }\r\n\r\n  if(input.minL != null && typeof input.value === 'string') {\r\n    if(input.value.length < input.minL) {\r\n      errors = [...errors, ErrorMessagegs.minL(input.minL)];\r\n    }\r\n    \r\n  }\r\n\r\n  if(input.maxL != null && typeof input.value === 'string') {\r\n    if(input.value.length < input.maxL) {\r\n      errors = [...errors, ErrorMessagegs.maxL(input.maxL)];\r\n    }\r\n  }\r\n\r\n  if(input.min != null && typeof input.value === \"number\") {\r\n    if(input.value < input.min) {\r\n      errors = [...errors, ErrorMessagegs.min(input.min)];\r\n    }\r\n  }\r\n\r\n  if(input.max != null && typeof input.value === \"number\") {\r\n    if(input.value > input.max) {\r\n      errors = [...errors, ErrorMessagegs.max(input.max)];\r\n    }\r\n  }\r\n\r\n  return errors\r\n}","export const getKeyValue = <T extends object, U extends keyof T>(obj: T) => (key: U) =>\r\n  obj[key];","import { AutoBind } from \"../decorators\";\r\nimport { validate} from '../validators';\r\nimport { UserInput } from '../types';\r\nimport { getKeyValue } from '../helpers';\r\nimport { ValidatorConfig, InputErrors } from '../interfaces';\r\nimport { ProjectState } from \"./state\";\r\nimport { Component } from \"./component\";\r\n\r\nconst projectState = ProjectState.getInstance()\r\n\r\n\r\nexport class ProjectTemplate extends Component<HTMLDivElement, HTMLElement> {\r\n  formElem: HTMLFormElement\r\n  titleInputElement: HTMLInputElement;\r\n  descriptionInputElement: HTMLInputElement;\r\n  peopleInputElement: HTMLInputElement;\r\n\r\n  constructor() {\r\n  \r\n    super('project-template', 'app', true);\r\n\r\n    this.formElem = this.appContainerElem.querySelector('#project-form')! as HTMLFormElement;\r\n\r\n    this.titleInputElement = this.appContainerElem.querySelector('#title')! as  HTMLInputElement;\r\n    this.descriptionInputElement = this.appContainerElem.querySelector('#description')! as  HTMLInputElement;\r\n    this.peopleInputElement = this.appContainerElem.querySelector('#people')! as  HTMLInputElement;\r\n  \r\n    this.configure()\r\n  }\r\n\r\n  \r\n\r\n  private getUserInput(): UserInput {\r\n    const titleVal = this.titleInputElement.value;\r\n    const descVal = this.descriptionInputElement.value;\r\n    const peopleVal = +this.peopleInputElement.value;\r\n\r\n    const validatableTitle: ValidatorConfig = {\r\n      value: titleVal,\r\n      required: true\r\n    }\r\n\r\n    const validatableDesc: ValidatorConfig = {\r\n      value: descVal,\r\n      required: true,\r\n      minL: 7\r\n    }\r\n\r\n    const validatablePeople: ValidatorConfig = {\r\n      value: peopleVal,\r\n      required: true,\r\n      min: 1,\r\n      max: 7\r\n    }\r\n    \r\n    const InputErrorVals : InputErrors = {\r\n      title: validate(validatableTitle),\r\n      description: validate(validatableDesc),\r\n      people: validate(validatablePeople)\r\n    }\r\n\r\n    return { errors: InputErrorVals, inputVals: {\r\n      title: titleVal,\r\n      description: descVal,\r\n      people: peopleVal\r\n    }}\r\n  \r\n  }\r\n\r\n  private getAndPrintErrors(key: string, errorArr: string[]) {\r\n    const inputEl = this.appContainerElem.querySelector(`#${key}`)! as HTMLInputElement;\r\n    const errorSpan = inputEl.nextElementSibling! as HTMLSpanElement;\r\n\r\n    if(errorArr.length > 0) {\r\n      if(errorSpan && errorSpan.innerHTML === '') {\r\n        for(let i = 0; i < errorArr.length ; i++ ) {\r\n          const err = errorArr[i]\r\n          const isLastIndex = i === errorArr.length - 1;\r\n          \r\n          const node = document.createTextNode(`${isLastIndex  ? err : err + ', '}`);\r\n          errorSpan.appendChild(node)\r\n        }\r\n      }\r\n      return false;\r\n      \r\n    } else {\r\n      errorSpan.innerHTML = '';\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private resolveErrors(errors: any) {\r\n    let errArray = []\r\n\r\n    for(const key in errors) {\r\n      let errorArr: string[] = getKeyValue(errors)(key)\r\n      errArray.push(this.getAndPrintErrors(key, errorArr));\r\n    }\r\n  \r\n    return errArray.every(el => el === true)\r\n  }\r\n\r\n  @AutoBind\r\n  private submitHandler(e: Event) {\r\n    e.preventDefault();\r\n    const { errors, inputVals } = this.getUserInput();\r\n  \r\n    if(this.resolveErrors(errors)) {\r\n      projectState.addProject(inputVals)\r\n    }\r\n\r\n  }\r\n  \r\n  renderContent() {}\r\n  \r\n  configure() {\r\n    this.formElem.addEventListener('submit', this.submitHandler)\r\n  }\r\n\r\n}","import { ProjectState } from \"./classes/state\";\r\nimport { ProjectList } from \"./classes/projectList\";\r\nimport { ProjectTemplate } from \"./classes/projectTemplate\";\r\n\r\nconst projectState = ProjectState.getInstance()\r\n\r\nconst projTemp = new ProjectTemplate()\r\nconst activeProjectList = new ProjectList('active');\r\nconst finishedProjectList = new ProjectList('finished');\r\nconsole.log({projTemp, activeProjectList, finishedProjectList, projectState })\r\n"]}